<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAH//Z
</value>
  </data>
</root>